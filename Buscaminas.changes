----QUIT----2023-10-31T13:53:19.825698+01:00 Pharo11-SNAPSHOT-64bit-0ead11d.image priorSource: 0!----QUIT----2023-10-31T13:53:55.315373+01:00 Pharo11-SNAPSHOT-64bit-0ead11d.image priorSource: 0!Object subclass: #Buscaminas	instanceVariableNames: '' 	classVariableNames: ''	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: ''	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 14:52'!crearTablero! !Object subclass: #Jugador	instanceVariableNames: ''	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Jugador	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'Buscaminas'!!Jugador methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 15:45'!initialize |jugador|jugador:= nil.[jugador isNil or: jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')]."self nombre: jugador"! !!Jugador methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 15:45'!nombre	^ nombre! !!Jugador methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 15:45'!nombre: unNombre	nombre := unNombre! !!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 15:46' prior: 33555234!initialize |jugador|jugador:= nil.[jugador isNil or: jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 15:46' prior: 33555740!initialize |jugador|[jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 15:46' prior: 33556014!initialize |jugador|jugador=''.[jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 15:53' prior: 33556255!initialize |jugador|jugador=''.[jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !Object subclass: #Partida	instanceVariableNames: ''	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Partida	instanceVariableNames: 'jugador'	classVariableNames: ''	package: 'Buscaminas'!!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 16:00'!initialize |opcion|jugador:=Jugador new.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Original' 'Filas y Columnas' 'Diagonal' 'Aleatorio') values: #(1 2 3 4) lines: #(1 2 3 4) message:'Seleccione un modo de juego' title:'Lights Out')].self modoJuego: opcion.self tamaño.! !Object subclass: #Partida	instanceVariableNames: 'jugador dificultad'	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Partida	instanceVariableNames: 'jugador dificultad dimension'	classVariableNames: ''	package: 'Buscaminas'!!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 16:05' prior: 33556508!initialize |jugador|jugador=''.[jugador isNil or: jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 16:06' prior: 33556961!initialize |opcion|opcion := nil.jugador:=Jugador new.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Original' 'Filas y Columnas' 'Diagonal' 'Aleatorio') values: #(1 2 3 4) lines: #(1 2 3 4) message:'Seleccione un modo de juego' title:'Lights Out')].self dificultad: opcion.self tamaño.! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 16:07'!tamaño"Se pide al usuario que elija el tamaño del tablero"|tam|tam:=nil.[ tam isNil ]whileTrue: [tam := (UIManager default chooseFrom: #('3x3' '5x5' '7x7') values: #(3 5 7) lines: #(1 2 3) message:'Seleccione el tamaño del tablero' title:'Lights Out')].	^dimension=tam! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 16:08'!dificultad	^ dificultad! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 16:08'!dificultad: unaDificultad	dificultad := unaDificultad ! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 16:10'!jugador	^ jugador! !Partida removeSelector: #tamaño!!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 18:27' prior: 33557886!initialize |opcion|opcion := nil.jugador:=Jugador new.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !Object subclass: #Partida	instanceVariableNames: 'jugador dificultad dimension'	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'partida'	package: 'Buscaminas'!Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'partida tablero'	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'celdas tamaño contadorDeClicks modoJuego cambiarLuz'	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'partida tablero ventana'	package: 'Buscaminas'!!Buscaminas methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 18:44'!initialize partida:= Partida new.tablero:= Tablero new .tablero tamaño:partida dificultad.tablero modoJuego:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 18:45'!tamaño	^ tamaño! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 18:45'!tamaño: unTamaño	tamaño := unTamaño! !!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 18:45' prior: 33560078!initialize partida:= Partida new.tablero:= Tablero new .tablero tamaño:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: ''	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 18:56'!initialize	super initialize. 	self label: ''. "Para la celda no tenga un nombre"	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 80@80 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	#(true false) atRandom ifTrue: [ self turnOn  ]ifFalse: [ self turnOff  ].! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 18:56' prior: 33560996!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 80@80 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	#(true false) atRandom ifTrue: [ self turnOn  ]ifFalse: [ self turnOff  ].! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onClick'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:00'!onClick: aBlock	onClick := aBlock! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:04'!verificar:i at:j	^'Se verifico la celda (', i, ', ', j, ').' ! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:06'!verificar:i at:j	^'Se verifico la celda (', i, ', ', j, ').' ! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:06'!verificar:i at:j	^'Se verifico la celda (', i, ', ', j, ').' ! !Partida removeSelector: #verificar:at:!Celda removeSelector: #verificar:at:!!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:07'!nuevaCelda: i at: j"Instanciamos una nueva luz y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.		celda onClick: [ self verificar: i at: j ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:07' prior: 33554922!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (tamaño * tamaño) @ (tamaño * tamaño)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	contadorDeClicks:=1.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 19:08' prior: 33561423!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 80@80 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	#(true false) atRandom ifTrue: [ self turnOn  ]ifFalse: [ self turnOff  ]. "mapear bombas"! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'tamaño modoJuego cambiarLuz'	classVariableNames: ''	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'celdas tamaño dificultad'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:10' prior: 33562992!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (tamaño * tamaño) @ (tamaño * tamaño)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:11' prior: 33564041!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (6 * 6) @ (6 * 6)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'celdas tamaño'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:13' prior: 33564388!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (tamaño * tamaño) @ (tamaño * tamaño)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:14' prior: 33564834!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (tamaño * tamaño) @ (tamaño * tamaño)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:16' prior: 33565181!crearTablero 	self useRoundedCorners.	self tamaño.	self color: Color black.		celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:17' prior: 33565522!crearTablero 	self useRoundedCorners.	self tamaño.	self bounds: (0@0 extent: (tamaño * tamaño) @ (tamaño * tamaño)+ (2* borderWidth) ).	self color: Color black.		celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:18' prior: 33565773!crearTablero 	self useRoundedCorners.	self tamaño.	self color: Color black.		celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:20' prior: 33566114!crearTablero 	| lado celda |	self useRoundedCorners.	self tamaño.	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'celdas dificultad'	classVariableNames: ''	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'celdas dificultad tamaño'	classVariableNames: ''	package: 'Buscaminas'!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 19:28' prior: 33560627!initialize partida:= Partida new.tablero:= Tablero new .tablero dificultad:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:29'!dificultad: unaDificultad	dificultad:= unaDificultad.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 19:29'!dificultad	^ dificultad! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:30' prior: 33566365!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:34' prior: 33567551!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		 ] ifFalse: [ 			tamaño:= 14.		(dificultad = 2) ifTrue: [ 			 ] ifFalse: [ 				tamaño:= 20.			]		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:34' prior: 33567947!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		 ] ifFalse: [ 			tamaño:= 14.		(dificultad = 2) ifTrue: [ 			 ] ifFalse: [ 				tamaño:= 20.			]		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (tamaño) @ (tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:35' prior: 33568498!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		 ] ifFalse: [ 			tamaño:= 14.		(dificultad = 2) ifTrue: [ 			 ] ifFalse: [ 				tamaño:= 20.			]		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:36' prior: 33569035!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		 ] ifFalse: [ 			tamaño:= 14.		(dificultad = 2) ifTrue: [ 			 ] ifFalse: [ 				tamaño:= 20.			]		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:42' prior: 33569586!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		 ] ifFalse: [		(dificultad = 2) ifTrue: [			tamaño:= 14.			] ifFalse: [ 				tamaño:= 20.			 ]		].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:43' prior: 33570118!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		].	(dificultad = 2) ifTrue: [			tamaño:= 14.			] ifFalse: [ 				tamaño:= 20.			 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:43' prior: 33570666!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		].	(dificultad = 2) ifTrue: [			tamaño:= 14.			 ].	(dificultad = 3) ifTrue: [ 				tamaño:= 20.].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 19:45' prior: 33563363!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 10@10 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	#(true false) atRandom ifTrue: [ self turnOn  ]ifFalse: [ self turnOff  ]. "mapear bombas"! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:45' prior: 33571198!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ tamaño:= 8 ].	(dificultad = 2) ifTrue: [ tamaño:= 14 ].	(dificultad = 3) ifTrue: [ tamaño:= 20 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (0@0 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 19:47' prior: 33571746!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	#(true false) atRandom ifTrue: [ self turnOn  ]ifFalse: [ self turnOff  ]. "mapear bombas"! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:49' prior: 33572153!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ tamaño:= 8 ].	(dificultad = 2) ifTrue: [ tamaño:= 14 ].	(dificultad = 3) ifTrue: [ tamaño:= 20 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (400@100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:50' prior: 33573089!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ tamaño:= 8 ].	(dificultad = 2) ifTrue: [ tamaño:= 14 ].	(dificultad = 3) ifTrue: [ tamaño:= 20 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: 6 tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 19:50' prior: 33573620!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ tamaño:= 8 ].	(dificultad = 2) ifTrue: [ tamaño:= 14 ].	(dificultad = 3) ifTrue: [ tamaño:= 20 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !----SNAPSHOT----2023-11-14T19:52:19.772-03:00 Buscaminas.image priorSource: 99!Tablero removeSelector: #tamaño!Tablero removeSelector: #tamaño:!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 21:48' prior: 33562577!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.		celda onClick: [ self verificar: i at: j ].! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño celdas bombas'	classVariableNames: ''	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño cantBombas celdas bombas '	classVariableNames: ''	package: 'Buscaminas'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño cantMinas celdas minas '	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 21:53' prior: 33574153!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	minas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 21:54'!cantMinas	^cantMinas! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 22:41'!mapearMinas                   "Caracteristicas de las celdas de la matriz2, en esta matriz se generaran las bombas de manera aleatoria"	super initialize.	self label: ''.	self borderWidth: 1.	bounds := 0 @ 0 corner: 30 @ 30.	onColor := Color red.	offColor := Color lightGray lighter.	self turnOff.	(10 atRandom) > 1		ifFalse: [ self turnOn].	self useSquareCorners! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:41' prior: 33572682!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self mapearMinas.! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 22:45'!mapearMinas: unaCantidad	self mapearMinas: (unaCantidad-1).! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 22:55'!mapearMinas: unaCantidad	unaCantidad > 1 ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [ 			celdas.		 ].			"celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ]."! !Celda removeSelector: #mapearMinas:!Celda removeSelector: #mapearMinas!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 22:56' prior: 33575699!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	celda := Celda new.	lado:= celda width.	self color: Color black.		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:56' prior: 33576962!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:58' prior: 33578433!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self turnOff.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:59' prior: 33578764!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:59' prior: 33579096!initialize	super initialize. 	self label: 'd'. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 22:59' prior: 33579427!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray .	offColor := Color lightGreen .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:05' prior: 33579759!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color veryVeryDarkGray.	offColor := Color lightGray.	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:06' prior: 33580090!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color lightGreen .	offColor := Color lightBrown .	self turnOn.! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 23:06' prior: 33577817!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	celda := Celda new.	lado:= celda width.	self color: Color brown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:13' prior: 33580418!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color paleGreen .	offColor := Color lightBrown .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:13' prior: 33581358!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color transparent .	offColor := Color lightBrown .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:14' prior: 33581682!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	self useRoundedCorners. 	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 23:14' prior: 33580741!crearTablero 	| lado celda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	celda := Celda new.	lado:= celda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:15' prior: 33582008!initialize	super initialize. 	self label: ''. 	self borderWidth: 10.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:15' prior: 33582949!initialize	super initialize. 	self label: ''. 	self borderWidth: 100.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:15' prior: 33583244!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:19' prior: 33574843!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:19' prior: 33577436!mapearMinas: unaCantidad	unaCantidad > 1 ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [ 			celdas.		 ].	! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onClick tieneMina'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 23:24'!tieneMina ^tieneMina! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 23:27'!tieneMina: valorDeVerdadtieneMina:= valorDeVerdad.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:30' prior: 33584196!mapearMinas: unaCantidad	unaCantidad > 1 ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [:i :j |						[(celdas at: i at: j)tieneMina ] whileTrue: [ 								 ].			(celdas at: i at: j)tieneMina: true.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:30' prior: 33583831!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:32' prior: 33585112!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !----SNAPSHOT----2023-11-14T23:33:34.008-03:00 Buscaminas.image priorSource: 20167!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:38' prior: 33562346!verificar:i at:j	Transcript show: 'Se verifico la celda (', i, ', ', j, ').' ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:38' prior: 33586022!verificar:i at:j	^Transcript show: 'Se verifico la celda (', i, ', ', j, ').' ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:39' prior: 33586195!verificar:i at:j	Transcript show: 'Se verifico la celda (', i, ', ', j, ').' ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:39' prior: 33586369!verificar:i at:j	^'hola' ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:40' prior: 33585522!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ Transcript show: 'Se verifico la celda (', i, ', ', j, ').' ].	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:42' prior: 33586663!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	Transcript show: (celda onClick: [ self verificar: i at: j ]).	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:43' prior: 33586542!verificar:i at:j	^'hola', i, ', ', j. ! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onClick tieneMina numero'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:46' prior: 33583540!initialize	super initialize. 	self label: '  ', numero, '  '. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:47' prior: 33587115!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/14/2023 23:49'!numero: unNumeronumero:= unNumero! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:50' prior: 33588129!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	celda numero: i.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/14/2023 23:50' prior: 33582327!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.		lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:51' prior: 33588666!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	celda numero: (i)asString.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:52' prior: 33587822!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:52' prior: 33590196!initialize	super initialize. 	self label: numero. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:52' prior: 33590490!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 23:55' prior: 33588537!numero: unNumeronumero:= (unNumero)asString! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/14/2023 23:55' prior: 33589749!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	celda numero: i.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:56' prior: 33590788!initialize	super initialize. 	self label: numero. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:56' prior: 33591653!initialize	super initialize. 	self label: numero, 'j'. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:56' prior: 33591951!initialize	super initialize. 	self label: (numero, 'j'). 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:57' prior: 33592254!initialize	super initialize. 	self label: 'j'. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 23:57' prior: 33592559!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:05' prior: 33584790!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ].	(unaCantidad > 1) ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j)tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j)tieneMina: true.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:05' prior: 33593145!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j)tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j)tieneMina: true.		 ].	! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 00:08'!ponerMinatieneMina:= true.offColor := Color red .! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:09' prior: 33593591!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j)tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j) ponerMina.		 ].	! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/15/2023 00:09' prior: 33589101!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	self dificultad.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.		lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	self mapearMinas: cantMinas.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:10' prior: 33594156!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j) tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j) ponerMina.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:11' prior: 33595256!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j) ponerMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j) ponerMina.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:11' prior: 33595678!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[(celdas at: i at: j) tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j) ponerMina.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:11' prior: 33596100!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ] ifFalse: [			i:= (tamaño atRandom).			j:= (tamaño atRandom).			"[(celdas at: i at: j) tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ]."			(celdas at: i at: j) ponerMina.		 ].	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:13' prior: 33596522!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ].	i:= (tamaño atRandom).			j:= (tamaño atRandom).			"[(celdas at: i at: j) tieneMina ] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ]."			(celdas at: i at: j) ponerMina.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:14' prior: 33596946!mapearMinas: unaCantidad| i j |	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ].			i:= (tamaño atRandom).			j:= (tamaño atRandom).			[((celdas at: i at: j) tieneMina)] whileTrue: [ 				i:= (tamaño atRandom).				j:= (tamaño atRandom).				 ].			(celdas at: i at: j) ponerMina.	! !Celda removeSelector: #tieneMina:!!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 00:16' prior: 33584536!tieneMina	^tieneMina! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 00:17' prior: 33592854!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.	self tieneMina: false.! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 00:17' prior: 33597912!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.	tieneMina:= false.! !----SNAPSHOT----2023-11-15T00:19:17.465-03:00 Buscaminas.image priorSource: 31414!----QUIT----2023-11-15T00:19:23.659-03:00 Buscaminas.image priorSource: 44017!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/15/2023 11:27' prior: 33594578!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.		lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	self mapearMinas: cantMinas.	! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onClick tieneMina'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 11:29' prior: 33591216!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onClick: [ self verificar: i at: j ].	^celda! !Celda removeSelector: #numero:!----SNAPSHOT----2023-11-15T11:36:03.066-03:00 Buscaminas.image priorSource: 44101!!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/15/2023 15:15' prior: 33598706!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.	lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	minas := OrderedCollection new.	self mapearMinas: cantMinas.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:15' prior: 33597352!mapearMinas: unaCantidad| i j posicion|	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ].	i:= (tamaño atRandom).	j:= (tamaño atRandom).	[((celdas at: i at: j) tieneMina)] whileTrue: [ 		i:= (tamaño atRandom).		j:= (tamaño atRandom).	].	(celdas at: i at: j) ponerMina.	posicion := Array new: 2.	posicion at: 1 put: i.	posicion at: 2 put: j.	minas addLast: posicion.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:19' prior: 33587550!verificar:i at:j	 (celdas at: i - 1 at: j) toggleState! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 15:21'!mouseUp: anEvent	self toggleState.	onClick value ! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:21' prior: 33601362!mouseUp: anEvent	self turnOff.	onClick value ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:23' prior: 33601219!verificar:i at:j! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onClick onRightClick onLeftClick tieneMina'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:35' prior: 33601511!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ onRightClick value ].	anEvent yellowButtonPressed 		ifTrue: [ onLeftClick value].! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 15:37'!onLeftClick: aBlockonLeftClick:= aBlock! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 15:38'!onRightClick: aBlockonRightClick:= aBlock! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:39' prior: 33601921!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ onRightClick value ]. "Click derecho"	anEvent yellowButtonPressed 		ifTrue: [ onLeftClick value]. "Click izquierdo"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:40' prior: 33602414!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ 			self toggleState.			onRightClick value 			 ]. "Click derecho"	anEvent yellowButtonPressed 		ifTrue: [ 			self turnOff.			onLeftClick value			 ]. "Click izquierdo"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:41' prior: 33602685!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ 			self toggleState.			onRightClick value 			 ] ifFalse: [ 			self turnOff.			onLeftClick value			 ]. "Click izquierdo"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:41' prior: 33603012!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ "Click derecho"			self toggleState.			onRightClick value 			 ] ifFalse: [ "Click izquierdo"			self turnOff.			onLeftClick value			 ]. ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:41' prior: 33599494!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self verificar: i at: j ].	celda onLeftClick: [ self verificar: i at: j ].	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:41' prior: 33601653!verificar:i at:j	! !Celda removeSelector: #onClick:!SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onRightClick onLeftClick tieneMina'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:46' prior: 33603291!mouseUp: anEvent	anEvent redButtonPressed 		ifTrue: [ "Click derecho"			onRightClick value 			 ] ifFalse: [ "Click izquierdo"			onLeftClick value			 ]. ! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:47' prior: 33603582!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleState].	celda onLeftClick: [ self verificar: i at: j ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:47' prior: 33604600!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleState].	celda onLeftClick: [ celda turnOff ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:47' prior: 33605090!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda turnOn].	celda onLeftClick: [ celda turnOff ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:47' prior: 33605570!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda turnOn ].	celda onLeftClick: [ celda turnOff ].	"self verificar: i at: j"	^celda! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 15:50'!mouseDown: anEvent                  "Evalua que sucede cuando se clickea el mouse, tanto para click izquierdo como derecho"	 anEvent redButtonPressed         ifTrue: [ onLeftClick value].     anEvent yellowButtonPressed          ifTrue: [ onRightClick value .]! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:51' prior: 33604347!mouseUp: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value .] "Click derecho"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 15:52' prior: 33606513!mouseDown: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value .] "Click derecho"! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 15:53'!ponerBandera! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:57'!ponerBandera:i at: j! !Celda removeSelector: #ponerBandera!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:57' prior: 33606045!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda ponerBandera:i at: j].	celda onLeftClick: [ celda turnOff ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:58' prior: 33607686!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera:i at: j].	celda onLeftClick: [ celda turnOff ].	"self verificar: i at: j"	^celda! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:58'!toggleBandera:i at: j! !Celda removeSelector: #ponerBandera:at:!SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onRightClick onLeftClick tieneMina tieneBandera'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:03' prior: 33608175!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera:i at: j].	celda onLeftClick: [ (celda state)ifTrue:[ celda toggleState ].  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:04' prior: 33608964!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera:i at: j].	celda onLeftClick: [ (celda value)ifTrue:[ celda toggleState ].  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:05' prior: 33609484!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera:i at: j].	celda onLeftClick: [ (celda statusValue )ifTrue:[ celda toggleState ].  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:14' prior: 33610004!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera:i at: j].	celda onLeftClick: [ (celda isOn )ifTrue:[ celda toggleState ].  ].	"self verificar: i at: j"	^celda! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:18' prior: 33608647!toggleBandera:i at: j(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.			 ].		].! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 16:18' prior: 33598230!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.	tieneBandera:= false.	tieneMina:= false.! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:19'!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.			 ].		].! !Celda removeSelector: #toggleBandera:at:!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:20' prior: 33610531!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera].	celda onLeftClick: [ (celda isOn )ifTrue:[ celda toggleState ].  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:21' prior: 33611981!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera].	celda onLeftClick: [  celda turnOff  ].	"self verificar: i at: j"	^celda! !----SNAPSHOT----2023-11-15T16:22:29.333-03:00 Buscaminas.image priorSource: 45419!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:23' prior: 33612493!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda turnOn ].	celda onLeftClick: [  celda turnOff  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:24' prior: 33613061!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera ].	celda onLeftClick: [  celda turnOff  ].	"self verificar: i at: j"	^celda! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:25' prior: 33611657!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOn		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:25' prior: 33614022!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOn.		tieneBandera:= true.				 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:26' prior: 33614317!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOn.		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:26' prior: 33614639!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOn.		tieneBandera:= true.		offColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:27' prior: 33614982!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOn.		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:27' prior: 33615326!toggleBandera(self isOn)ifFalse:[	(tieneBandera) ifFalse: [ 		self turnOff.		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:27' prior: 33615669!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifFalse: [ 		self turnOff.		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:28' prior: 33616013!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifFalse: [ 		self turnOn.		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:28' prior: 33616356!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:29' prior: 33616698!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self turnOff.		onColor:= Color green.		self turnOn.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.			 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:30' prior: 33617025!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self turnOff.		onColor:= Color green.		self turnOn.		 ] ifFalse: [ 		tieneBandera:= true.		self turnOn.		onColor:= Color blue.			self turnOff.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:31' prior: 33617449!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self turnOff.		onColor:= Color green.		self turnOn.		 ] ifFalse: [ 		tieneBandera:= true.		self turnOff.		onColor:= Color blue.			self turnOn.		 ].		]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:31' prior: 33617904!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self turnOff.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self turnOff.		onColor:= Color blue.					 ].		self turnOn.	]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:32' prior: 33618359!toggleBandera(self isOn)ifTrue:[	self turnOff.	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.			 ].		self turnOn.	]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:33' prior: 33618800!toggleBandera(self isOn)ifTrue:[		(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self turnOff.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self turnOff.		onColor:= Color blue.			 ].		self turnOn.	]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !Celda removeSelector: #mouseUp:!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:37'!mouseUp: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value .] "Click derecho"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:40' prior: 33619221!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		color:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		color:= Color blue.			 ].	]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:40' prior: 33619972!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self color: Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self color: Color blue.			 ].	]."tieneBandera:= false.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		onColor:= Color blue.	"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:41' prior: 33619689!mouseUp: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value]. "Click derecho"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:41' prior: 33607163!mouseDown: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value]. "Click derecho"! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:42' prior: 33620359!toggleBandera	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self color: Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self color: Color blue.			 ].! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:43' prior: 33621330!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self color: Color green.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self color: Color blue.			onColor:= Color blue.		 ].	].! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:45'!tieneBandera	^tieneBandera! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:45' prior: 33613539!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera ].	celda onLeftClick: [  (celda tieneBandera) ifFrue: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:45' prior: 33622034!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera ].	celda onLeftClick: [  (celda tieneBandera) ifTrue: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:46' prior: 33622550!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ celda toggleBandera ].	celda onLeftClick: [  (celda tieneBandera) ifFalse: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !Celda removeSelector: #mouseDown:!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:47'!mouseDown: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value]. "Click derecho"! !!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:47'!mouseMove: anEvent! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño cantMinas celdas minas banderas'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:52'!clickDerecho(celdas tieneBandera) ifTrue: [ 		celdas tieneBandera: false.		celdas color: Color green.		celdas onColor: Color green.		 ] ifFalse: [ 		celdas tieneBandera: true.		celdas color: Color blue.			celdas onColor: Color blue.		 ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:52' prior: 33623066!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho ].	celda onLeftClick: [  (celda tieneBandera) ifFalse: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:54'!clickDerecho: unaCelda(celdas tieneBandera) ifTrue: [ 		celdas tieneBandera: false.		celdas color: Color green.		celdas onColor: Color green.		 ] ifFalse: [ 		celdas tieneBandera: true.		celdas color: Color blue.			celdas onColor: Color blue.		 ].! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:54' prior: 33625000!clickDerecho: unaCelda(unaCelda tieneBandera) ifTrue: [ 		unaCelda tieneBandera: false.		unaCelda color: Color green.		unaCelda onColor: Color green.		 ] ifFalse: [ 		unaCelda tieneBandera: true.		unaCelda color: Color blue.			unaCelda onColor: Color blue.		 ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:54' prior: 33624496!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda ].	celda onLeftClick: [  (celda tieneBandera) ifFalse: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !Tablero removeSelector: #clickDerecho!!Celda methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 16:55'!tieneBandera: unValortieneBandera:= unValor! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:55' prior: 33621588!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self color: Color green.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self color: Color blue.			onColor:= Color blue.		 ].	].! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/15/2023 16:56' prior: 33600028!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.	lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	minas := OrderedCollection new.	banderas:= OrderedCollection new.	self mapearMinas: cantMinas.	! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:57'!clickDerecho: unaCelda at: i at: j| posicion |(unaCelda tieneBandera) ifTrue: [ 		unaCelda tieneBandera: false.		unaCelda color: Color green.		unaCelda onColor: Color green.		posicion := Array new: 2.		posicion at: 1 put: i.		posicion at: 2 put: j.		minas addLast: posicion.				 ] ifFalse: [ 		unaCelda tieneBandera: true.		unaCelda color: Color blue.			unaCelda onColor: Color blue.		 ].! !Tablero removeSelector: #clickDerecho:!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:58' prior: 33625721!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda at: i at:j ].	celda onLeftClick: [  (celda tieneBandera) ifFalse: [celda turnOff]  ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 17:00' prior: 33627460!clickDerecho: unaCelda at: i at: j| posicion |posicion := Array new: 2.posicion at: 1 put: i.posicion at: 2 put: j.(unaCelda tieneBandera) ifTrue: [ 		unaCelda tieneBandera: false.		unaCelda color: Color green.		unaCelda onColor: Color green.		banderas remove: posicion.				 ] ifFalse: [ 		unaCelda tieneBandera: true.		unaCelda color: Color blue.			unaCelda onColor: Color blue.		banderas addLast: posicion.		 ].! !----QUIT----2023-11-15T17:02:11.248-03:00 Buscaminas.image priorSource: 58453!----QUIT/NOSAVE----2023-11-15T17:03:04.602-03:00 Buscaminas.image priorSource: 74536!----QUIT/NOSAVE----2023-11-15T20:50:16.217-03:00 Buscaminas.image priorSource: 74536!----QUIT----2023-11-15T20:50:28.995-03:00 Buscaminas.image priorSource: 74536!!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 20:51' prior: 33628537!clickDerecho: unaCelda at: i at: j| posicion |posicion := Array new: 2.posicion at: 1 put: i.posicion at: 2 put: j.(unaCelda isOn) ifTrue: [ (unaCelda tieneBandera) ifTrue: [ 		unaCelda tieneBandera: false.		unaCelda color: Color green.		unaCelda onColor: Color green.		banderas remove: posicion.				 ] ifFalse: [ 		unaCelda tieneBandera: true.		unaCelda color: Color blue.			unaCelda onColor: Color blue.		banderas addLast: posicion.		 ]	]! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 20:53'!clickIzquierdo: unaCelda at: i at: j! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 20:54' prior: 33629945!clickIzquierdo: unaCelda at: i at: j(unaCelda tieneBandera) ifFalse: [unaCelda turnOff]! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 20:54' prior: 33627999!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda at: i at:j ].	celda onLeftClick: [ self clickIzquierdo: celda at: i at:j ].	"self verificar: i at: j"	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 20:54' prior: 33630264!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda at: i at:j ].	celda onLeftClick: [ self clickIzquierdo: celda at: i at:j ].	^celda! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:14'!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'Perdiste!!' trueChoice:'New Game' falseChoice: 'Exit'  cancelChoice:'Volver' default: nil."derrota ifTrue:[ self reiniciar  ] ifFalse: [ derrota = false ifTrue: [ self salir ]  ].self bombasRestantes"! !!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:16' prior: 33567025!initialize partida:= Partida new.partida jugador: Jugador new.tablero:= Tablero new .tablero dificultad:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:16'!jugador: unJugadorjugador:= unJugador! !!Buscaminas methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:18'!nuevoJuegotablero:= Tablero new .tablero dificultad:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:18'!reiniciar "Nuevo juego"	self delete.	Buscaminas nuevoJuego	! !Buscaminas removeSelector: #nuevoJuego!!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:22' prior: 33632315!reiniciar "Nuevo juego"	self delete.	self initialize .	self crearTablero openInHand openInWindow setLabel:'Buscaminas'.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:23' prior: 33631277!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ self reiniciar  ] "ifFalse: [ derrota = false ifTrue: [ self salir ]  ].self bombasRestantes"""! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 21:24' prior: 33630081!clickIzquierdo: unaCelda at: i at: j(unaCelda tieneBandera) ifFalse: [unaCelda turnOff].minas do: [ :pos |	((pos at: 1) = i) & ((pos at: 2) = j) ifTrue: [ 		self derrota.		 ]	 ].! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:24' prior: 33559061!initialize |opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:27'!nuevaPartida|opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !Partida removeSelector: #initialize!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:28' prior: 33631653!initialize partida:= Partida new.partida jugador: Jugador new.partida nuevaPartida.tablero:= Tablero new .tablero dificultad:partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:30'!initialize self jugador: Jugador new.self nuevaPartida.! !Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'partida'	package: 'Buscaminas'!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:31' prior: 33634135!initialize partida:= Partida new.! !Object subclass: #Partida	instanceVariableNames: 'jugador dificultad dimension ventana tablero'	classVariableNames: ''	package: 'Buscaminas'!!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:32' prior: 33633741!nuevaPartida|opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.tablero:= Tablero new.tablero dificultad: dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:33' prior: 33632523!reiniciar "Nuevo juego"	self delete.	Partida new.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:33' prior: 33635479!reiniciar "Nuevo juego"	self delete.	Partida nuevaPartida.	! !Object subclass: #Buscaminas	instanceVariableNames: 'partida'	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Partida	instanceVariableNames: 'instanciaPartida jugador dificultad dimension ventana tablero'	classVariableNames: ''	package: 'Buscaminas'!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:36' prior: 33634718!initialize partida:= Partida new.partida instanciaPartida: partida.! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:36'!instanciaPartida: unaPartidainstanciaPartida:= unaPartida! !!Partida methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:37'!instanciaPartida	^instanciaPartida! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:38' prior: 33635627!reiniciar "Nuevo juego"	self delete.	self instanciaPartida nuevaPartida.	! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'instanciaPartida dificultad tamaño cantMinas celdas minas banderas'	classVariableNames: ''	package: 'Buscaminas'!!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:39' prior: 33634999!nuevaPartida|opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.tablero:= Tablero new.tablero dificultad: dificultad.tablero instanciaPartida: instanciaPartida.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'insPartida dificultad tamaño cantMinas celdas minas banderas'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:40' prior: 33636503!reiniciar "Nuevo juego"	self delete.	self insPartida nuevaPartida.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:41' prior: 33637549!reiniciar "Nuevo juego"	self delete.	insPartida nuevaPartida.	! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:42' prior: 33636855!nuevaPartida|opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.tablero:= Tablero new.tablero dificultad: dificultad.tablero insPartida: instanciaPartida.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:42'!insPartida: unaPartidainsPartida:= unaPartida! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:46' prior: 33634445!initialize |opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:46' prior: 33638537!initialize |opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !Object subclass: #Partida	instanceVariableNames: 'instanciaPartida jugador dificultad dimension'	classVariableNames: ''	package: 'Buscaminas'!Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'partida ventana tablero '	package: 'Buscaminas'!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:49' prior: 33636067!initialize | jugador |jugador:= Jugador new.partida:= Partida new.partida jugador: jugador.tablero:= Tablero new.tablero dificultad: partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !Partida removeSelector: #instanciaPartida!Partida removeSelector: #instanciaPartida:!Partida removeSelector: #nuevaPartida!Object subclass: #Partida	instanceVariableNames: 'jugador dificultad dimension'	classVariableNames: ''	package: 'Buscaminas'!Tablero removeSelector: #insPartida:!BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño cantMinas celdas minas banderas'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:50' prior: 33637714!reiniciar "Nuevo juego"	self delete.	Buscaminas new.	! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 21:52'!salirself delete! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:53' prior: 33632742!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ self reiniciar  ] ifFalse: [ derrota ifTrue: [ self salir ]  ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 21:54' prior: 33640566!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ self reiniciar  ] ifFalse: [ self salir ].! !!Tablero methodsFor: 'finalization' stamp: 'LautaroFaccini 11/15/2023 21:56' prior: 33640454!salir^self delete! !!Tablero methodsFor: 'finalization' stamp: 'LautaroFaccini 11/15/2023 21:57' prior: 33641230!salirself delete! !!Buscaminas class methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 22:02'!terminarJuego	tablero cerrar.	ventana close.! !!Buscaminas class methodsFor: 'finalization' stamp: 'LautaroFaccini 11/15/2023 22:03' prior: 33641461!terminarJuego	tablero salir.	ventana close.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:03' prior: 33640907!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ self reiniciar  ] ifFalse: [ Buscaminas terminarJuego ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:04' prior: 33641754!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ Buscaminas reiniciar  ] ifFalse: [ Buscaminas terminarJuego ].! !Tablero removeSelector: #reiniciar!Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'jugador partida tablero ventana'	package: 'Buscaminas'!Partida removeSelector: #jugador:!Partida removeSelector: #jugador!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 22:07' prior: 33639522!initialize jugador:= Jugador new.partida:= Partida new.tablero:= Tablero new.tablero dificultad: partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Buscaminas class methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 22:07'!reiniciar tablero salir.ventana close.partida:= Partida new.tablero:= Tablero new.tablero dificultad: partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:08' prior: 33642088!derrota|derrota|derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ Buscaminas reiniciar ] ifFalse: [ Buscaminas terminarJuego ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'LautaroFaccini 11/15/2023 22:22'!mostrarBombas! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:23' prior: 33643273!derrota|derrota|self mostrarBombas.derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ Buscaminas reiniciar ] ifFalse: [ Buscaminas terminarJuego ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:25'!mostrarMinas"Que vaya mostrando bombas de forma progresiva""(celdas at:  Variable or expression expected ->"! !Tablero removeSelector: #mostrarBombas!!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:25' prior: 33643715!derrota|derrota|self mostrarMinas.derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:'Volver' default: nil.derrota ifTrue:[ Buscaminas reiniciar ] ifFalse: [ Buscaminas terminarJuego ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:27' prior: 33644058!mostrarMinas"Que vaya mostrando bombas de forma progresiva"minas do: [:i | 	(celdas at: (i at: 1) at: (i at: 2)) turnOff.	 ]! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:27' prior: 33630787!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda at: i at:j ].	celda onLeftClick: [ self clickIzquierdo: celda at: i at:j ].! !----SNAPSHOT----2023-11-15T22:30:03.07-03:00 Buscaminas.image priorSource: 74790!----QUIT----2023-11-15T22:30:14.94-03:00 Buscaminas.image priorSource: 90850!