Object subclass: #Buscaminas	instanceVariableNames: ''	classVariableNames: 'jugador partida tablero ventana'	package: 'Buscaminas'!!Buscaminas methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 22:07'!initialize jugador:= Jugador new.partida:= Partida new.tablero:= Tablero new.tablero dificultad: partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Buscaminas class	instanceVariableNames: ''!!Buscaminas class methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 22:07'!reiniciar tablero salir.ventana close.partida:= Partida new.tablero:= Tablero new.tablero dificultad: partida dificultad.ventana:=tablero crearTablero openInHand openInWindow setLabel:'Buscaminas'.! !!Buscaminas class methodsFor: 'finalization' stamp: 'LautaroFaccini 11/15/2023 22:03'!terminarJuego	tablero salir.	ventana close.! !SimpleSwitchMorph subclass: #Celda	instanceVariableNames: 'onRightClick onLeftClick tieneMina tieneBandera'	classVariableNames: ''	package: 'Buscaminas'!!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 16:55'!tieneBandera: unValortieneBandera:= unValor! !!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 16:45'!tieneBandera	^tieneBandera! !!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 15:37'!onLeftClick: aBlockonLeftClick:= aBlock! !!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 00:16'!tieneMina	^tieneMina! !!Celda methodsFor: 'accessing' stamp: 'LautaroFaccini 11/15/2023 15:38'!onRightClick: aBlockonRightClick:= aBlock! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:47'!mouseDown: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value]. "Click derecho"! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:47'!mouseMove: anEvent! !!Celda methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 16:41'!mouseUp: anEvent	 anEvent redButtonPressed         ifTrue: [ onLeftClick value]. "Click izquierdo"    anEvent yellowButtonPressed          ifTrue: [ onRightClick value]. "Click derecho"! !!Celda methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 16:18'!initialize	super initialize. 	self label: ''. 	self borderWidth: 1.	bounds := 0@0 corner: 40@40 . "tamaño de la celda"	onColor := Color green .	offColor := Color transparent .	self turnOn.	tieneBandera:= false.	tieneMina:= false.! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 16:55'!toggleBandera(self isOn)ifTrue:[	(tieneBandera) ifTrue: [ 		tieneBandera:= false.		self color: Color green.		onColor:= Color green.		 ] ifFalse: [ 		tieneBandera:= true.		self color: Color blue.			onColor:= Color blue.		 ].	].! !!Celda methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 00:08'!ponerMinatieneMina:= true.offColor := Color red .! !Object subclass: #Jugador	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'Buscaminas'!!Jugador methodsFor: 'initialization' stamp: 'LautaroFaccini 11/14/2023 16:05'!initialize |jugador|jugador=''.[jugador isNil or: jugador='']whileTrue:[ jugador:= (UIManager default request: 'Ingrese su nombre de jugador: ')].self nombre: jugador! !!Jugador methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 15:45'!nombre	^ nombre! !!Jugador methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 15:45'!nombre: unNombre	nombre := unNombre! !Object subclass: #Partida	instanceVariableNames: 'jugador dificultad dimension'	classVariableNames: ''	package: 'Buscaminas'!!Partida methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 16:08'!dificultad: unaDificultad	dificultad := unaDificultad ! !!Partida methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 16:08'!dificultad	^ dificultad! !!Partida methodsFor: 'initialization' stamp: 'LautaroFaccini 11/15/2023 21:46'!initialize |opcion|opcion := nil.[ opcion isNil  ]whileTrue:[opcion  := (UIManager default chooseFrom: #('Facil' 'Medio' 'Dificil') values: #(1 2 3) lines: #(1 2 3) message:'Seleccione la dificultad: ' title:'Buscaminas')].self dificultad: opcion.! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'dificultad tamaño cantMinas celdas minas banderas numeros'	classVariableNames: ''	package: 'Buscaminas'!!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/15/2023 20:51'!clickDerecho: unaCelda at: i at: j| posicion |posicion := Array new: 2.posicion at: 1 put: i.posicion at: 2 put: j.(unaCelda isOn) ifTrue: [ (unaCelda tieneBandera) ifTrue: [ 		unaCelda tieneBandera: false.		unaCelda color: Color green.		unaCelda onColor: Color green.		banderas remove: posicion.				 ] ifFalse: [ 		unaCelda tieneBandera: true.		unaCelda color: Color blue.			unaCelda onColor: Color blue.		banderas addLast: posicion.		 ]	]! !!Tablero methodsFor: 'event handling' stamp: 'LautaroFaccini 11/16/2023 13:23'!clickIzquierdo: unaCelda at: i at: jself mostrar: unaCelda at: i at: j.! !!Tablero methodsFor: 'finalization' stamp: 'LautaroFaccini 11/15/2023 21:57'!salirself delete! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/16/2023 00:03'!derrota|derrota|self mostrarMinas.derrota:=UIManager default confirm:'Tiempo: ' label:'¡Kaboom!!' trueChoice:'Nuevo Juego' falseChoice: 'Salir'  cancelChoice:nil default: nil.derrota ifTrue:[ Buscaminas reiniciar ] ifFalse: [ Buscaminas terminarJuego ].! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/16/2023 14:34'!mostrarAdyacentes: fila at: columna-1 to: 1 do:[:i|	-1 to: 1do:[:j|		(1<=(fila+i))&(1<=(columna+j))&((fila+i)<=(tamaño))&((columna+j)<=(tamaño)) ifTrue:[			((celdas at: fila+i at: columna+j) isOn) ifTrue: [ 				self mostrar: (celdas at: fila+i at: columna+j) at: (fila+i) at: (columna+j)				 ].			]		]	]! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 15:41'!verificar:i at:j	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 23:56'!nuevaCelda: i at: j"Instanciamos una celda y le asignamos una posicion en nuestro arreglo "	| celda origen |	celda := Celda new.	origen := self innerBounds origin.	self addMorph: celda.	celda position: ((i - 1) * celda width) @ ((j - 1) * celda height) + origen.	celda onRightClick: [ self clickDerecho: celda at: i at:j ].	celda onLeftClick: [ self clickIzquierdo: celda at: i at:j ].	^celda! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 22:27'!mostrarMinas"Que vaya mostrando bombas de forma progresiva"minas do: [:i | 	(celdas at: (i at: 1) at: (i at: 2)) turnOff.	 ]! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/15/2023 23:55'!mapearMinas: unaCantidad| i j posicion|	(unaCantidad > 1) ifTrue: [ 		self mapearMinas: (unaCantidad-1).		 ].	i:= (tamaño atRandom).	j:= (tamaño atRandom).	[((celdas at: i at: j) tieneMina)] whileTrue: [ 		i:= (tamaño atRandom).		j:= (tamaño atRandom).	].	(celdas at: i at: j) ponerMina.	posicion := Array new: 2.	posicion at: 1 put: i.	posicion at: 2 put: j.	minas addLast: posicion.	! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/16/2023 12:45'!mapearNumeros |fila columna|	numeros  := Array2D new: tamaño. 1 to: tamaño do: [ :i|	1 to: tamaño  do: [ :j|		numeros  at: i at: j put:0   ]. ].minas do: [ :pos|	fila := pos at: 1.	columna := pos at: 2.	(fila - 1) to: (fila + 1) do: [ :i |        "Itera sobre las columnas adyacentes"        (columna - 1) to: (columna + 1) do: [ :j |            "Asegúrate de que la posición sea válida"            (i > 0 and: [ i <= tamaño and: [ j > 0 and: [ j <= tamaño  ] ] ]) ifTrue: [               	numeros  at:i at:j put: ((numeros at:i at:j) + 1).            ].        ].    ].	 ]! !!Tablero methodsFor: 'gameLogic' stamp: 'LautaroFaccini 11/16/2023 14:34'!mostrar: unaCelda at: i at: j(unaCelda tieneBandera) ifFalse: [	unaCelda turnOff.	minas do: [ :pos |	((pos at: 1) = i) & ((pos at: 2) = j) ifTrue: [ 		self derrota.		 ]	 ].	].(numeros at: i at: j) = 0 ifTrue: [ self mostrarAdyacentes:i  at:j  ].	unaCelda label: (numeros  at: i at:j)   asString.! !!Tablero methodsFor: 'initialize' stamp: 'LautaroFaccini 11/16/2023 12:44'!crearTablero 	| lado plantillaCelda |	self useRoundedCorners.	(dificultad = 1) ifTrue: [ 		tamaño:= 8.		cantMinas:= 10		 ].	(dificultad = 2) ifTrue: [ 		tamaño:= 14.		cantMinas:= 40 		 ].	(dificultad = 3) ifTrue: [ 		tamaño:= 20.		cantMinas:= 99		 ].	plantillaCelda := Celda new.	lado:= plantillaCelda width.	self color: Color lightBrown .		self bounds: (400 @ 100 extent: (lado * tamaño) @ (lado * tamaño)+ (2* borderWidth) ).	celdas:= Array2D new: tamaño tabulate: [ :i :j | self  nuevaCelda: i at: j  ].	minas := OrderedCollection new.	banderas:= OrderedCollection new.	self mapearMinas: cantMinas.	self mapearNumeros. ! !!Tablero methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 19:29'!dificultad: unaDificultad	dificultad:= unaDificultad.! !!Tablero methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 19:29'!dificultad	^ dificultad! !!Tablero methodsFor: 'accessing' stamp: 'LautaroFaccini 11/14/2023 21:54'!cantMinas	^cantMinas! !